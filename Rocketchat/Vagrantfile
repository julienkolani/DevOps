# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"
  config.vm.hostname = "rocketchat"

  # Configure the VM to use a private network with a static IP address in a different subnet.
  config.vm.network "private_network", ip: "192.168.56.10"

  # Enable the VM to connect to the internet via the host machine's NAT interface.
  config.vm.network "public_network", bridge: "wlp0s20f3"

  # Enable provisioning with a shell script to install Docker and Docker Compose.
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    apt-get update
    apt-get install -y docker-ce docker-compose

    # Create a Docker Compose file for RocketChat and MongoDB
    cat <<EOF > /home/vagrant/docker-compose.yml
volumes:
  mongodb_data: { driver: local }

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:\${RELEASE:-latest}
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.rocketchat.rule: Host(\`\${DOMAIN:-}\`)
      traefik.http.routers.rocketchat.tls: "true"
      traefik.http.routers.rocketchat.entrypoints: https
      traefik.http.routers.rocketchat.tls.certresolver: le
    environment:
      MONGO_URL: "\${MONGO_URL:-mongodb://\${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:\${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/\${MONGODB_DATABASE:-rocketchat}?replicaSet=\${MONGODB_REPLICA_SET_NAME:-rs0}}"
      MONGO_OPLOG_URL: "\${MONGO_OPLOG_URL:-mongodb://\${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:\${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/local?replicaSet=\${MONGODB_REPLICA_SET_NAME:-rs0}}"
      ROOT_URL: \${ROOT_URL:-http://localhost:\${HOST_PORT:-3000}}
      PORT: \${PORT:-3000}
      DEPLOY_METHOD: docker
      DEPLOY_PLATFORM: \${DEPLOY_PLATFORM:-}
      REG_TOKEN: \${REG_TOKEN:-}
    depends_on:
      - mongodb
    expose:
      - \${PORT:-3000}
    ports:
      - "\${BIND_IP:-0.0.0.0}:\${HOST_PORT:-3000}:\${PORT:-3000}"

  mongodb:
    image: docker.io/bitnami/mongodb:\${MONGODB_VERSION:-5.0}
    restart: always
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: \${MONGODB_REPLICA_SET_NAME:-rs0}
      MONGODB_PORT_NUMBER: \${MONGODB_PORT_NUMBER:-27017}
      MONGODB_INITIAL_PRIMARY_HOST: \${MONGODB_INITIAL_PRIMARY_HOST:-mongodb}
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: \${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
      MONGODB_ADVERTISED_HOSTNAME: \${MONGODB_ADVERTISED_HOSTNAME:-mongodb}
      MONGODB_ENABLE_JOURNAL: "\${MONGODB_ENABLE_JOURNAL:-true}"
      ALLOW_EMPTY_PASSWORD: "\${ALLOW_EMPTY_PASSWORD:-yes}"
EOF

    # Run Docker Compose to start RocketChat and MongoDB
    cd /home/vagrant
    docker-compose up -d
  SHELL

  # SSH configuration to ensure access
  config.vm.network "forwarded_port", guest: 22, host: 2223, id: "ssh"

  # Provider-specific configuration for VirtualBox.
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM
    vb.memory = "2048"
  end
end
